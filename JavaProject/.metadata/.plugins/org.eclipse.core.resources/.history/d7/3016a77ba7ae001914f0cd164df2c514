package test_client;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;

import javax.swing.*;

public class ChessPanel extends JPanel {

	public ChessButton[][] buttons = new ChessButton[19][19];
	private final int RADIUS=23;
	public ChessPanel() {
		this.setLayout(null);
		ImageIcon chessBoard = new ImageIcon(".\\board110.jpg");
		this.setSize(chessBoard.getIconWidth(), chessBoard.getIconHeight());
		this.setVisible(true);
		this.setBackground(null);

		for (int i = 0; i < 19; i++) {
			for (int j = 0; j < 19; j++) {
				buttons[i][j] = new ChessButton(i,j);
				this.add(buttons[i][j], new Integer(10000));
				buttons[i][j].setBounds(3 + i * 30, 3 + j * 30, 29, 29);
				buttons[i][j].setPos(18 + i * 29, 18 + j * 29);
				System.out.println("button"+i+j);
			}
		}
		
	}

	public void paintComponent(Graphics g) {

		for (int i = 0; i < 19; i++) {
			for (int j = 0; j < 19; j++) {
				if (buttons[i][j].getIdentity() == 1) {
					g.setColor(Color.BLACK);
					g.fillOval((int) buttons[i][j].getPos(0) - 12+i, (int) buttons[i][j].getPos(1) - 12+j, RADIUS, RADIUS);
				} else if (buttons[i][j].getIdentity() == -1) {
					g.setColor(Color.WHITE);
					g.fillOval((int) buttons[i][j].getPos(0)- 12+i, (int) buttons[i][j].getPos(1) - 12+j, RADIUS, RADIUS);
				}
			}
		}
	}
	public void actionPerformed(ActionEvent e) {  		
		repaint();	
	}
}
